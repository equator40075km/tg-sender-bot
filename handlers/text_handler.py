import os
from telebot import TeleBot, types
import handlers.buttons as buttons
import content
from log import logger


ACTION_SEND = '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å'
ACTION_DELETE = '—É–¥–∞–ª–∏—Ç—å'


def handle(bot: TeleBot):
    @bot.message_handler(content_types=['text'])
    def text(message: types.Message):
        if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ':
            bot.send_message(
                message.chat.id,
                get_confirm_msg(message, ACTION_SEND),
                reply_markup=buttons.confirm_send
            )
            return

        if message.text == '–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ':
            bot.send_message(
                message.chat.id,
                get_confirm_msg(message, ACTION_DELETE),
                reply_markup=buttons.confirm_remove
            )
            return

        if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úÖ':
            send_user_data(bot, message)
            return

        if message.text == '–£–¥–∞–ª–∏—Ç—å ‚ùå':
            delete_user_data(bot, message)
            return

        if message.text == '–û—Ç–º–µ–Ω–∞ üö´':
            bot.send_message(
                message.chat.id,
                '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ',
                reply_markup=buttons.manage_data
            )
            return

        try:
            content.save_content(
                message.from_user.username,
                message.chat.id,
                content.TEXT_KEY,
                message.text
            )
            bot.send_message(
                message.chat.id,
                '–í–∞—à —Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω',
                reply_markup=buttons.manage_data
            )
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %s" % e)


def send_user_data(bot: TeleBot, message: types.Message):
    if content.is_empty_content(message.chat.username, message.chat.id):
        bot.send_message(message.chat.id, "–î–ª—è –í–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
        return

    data = content.get_content(
        message.chat.username,
        message.chat.id
    )

    text = f"–î–∞–Ω–Ω—ã–µ –æ—Ç @{message.chat.username}"
    if data[content.TEXT_KEY] is not None:
        text += '\n\n' + data[content.TEXT_KEY]

    caption_added = False
    media_group = []
    for file_id in data[content.PHOTO_KEY]:
        if not caption_added:
            caption_added = True
            media_group.append(types.InputMediaPhoto(file_id, caption=text))
        else:
            media_group.append(types.InputMediaPhoto(file_id))

    for file_id in data[content.VIDEO_KEY]:
        if not caption_added:
            caption_added = True
            media_group.append(types.InputMediaVideo(file_id, caption=text))
        else:
            media_group.append(types.InputMediaVideo(file_id))

    try:
        if len(media_group) > 0:
            bot.send_media_group(os.getenv('TO_CHAT_ID'), media_group)
        else:
            bot.send_message(os.getenv('TO_CHAT_ID'), text)
    except Exception as e:
        logger.exception(f"Send media error:\n{e}")

    content.remove_content(
        message.chat.username,
        message.chat.id
    )

    bot.send_message(
        message.chat.id,
        "–í—Å–µ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω—ã –∏ —É–¥–∞–ª–µ–Ω—ã.",
        reply_markup=buttons.remove_markup
    )


def delete_user_data(bot: TeleBot, message: types.Message):
    if content.is_empty_content(message.chat.username, message.chat.id):
        bot.send_message(message.chat.id, "–î–ª—è –í–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
        return

    content.remove_content(
        message.chat.username,
        message.chat.id
    )
    bot.send_message(
        message.chat.id,
        "–í—Å–µ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.",
        reply_markup=buttons.remove_markup
    )


def get_confirm_msg(message: types.Message, action: str) -> str:
    user_data = content.get_content(message.chat.username, message.chat.id)

    result = '–£ –≤–∞—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:\n'
    if user_data[content.TEXT_KEY]:
        result += '\t\t—Ç–µ–∫—Å—Ç,\n'
    result += f"\t\t–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - {len(user_data[content.PHOTO_KEY])},\n" \
              f"\t\t–≤–∏–¥–µ–æ - {len(user_data[content.VIDEO_KEY])}.\n" \
              f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ {action} –¥–∞–Ω–Ω—ã–µ?"
    if action == ACTION_SEND:
        result += ' –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.'

    return result
